{"version":3,"sources":["components/RouteMap/RouteMap.module.css","components/LeftNav/LeftNav.module.css","components/File/ExportFile.module.css","components/RouteItem/RouteItem.module.css","components/RouteView/RouteView.module.css","store/navReducer.js","store/mapReducer.js","store/routeReducer.js","store/index.js","components/LeftNav/LeftNav.js","components/RouteItem/RouteItem.js","components/Modal/Modal.js","components/RouteItem/CreateRoute.js","components/RouteMap/RouteMap.js","components/RouteMap/MapModal.js","components/Modal/ConfirmModal.js","components/File/ExportFile.js","components/RouteView/RouteView.js","App.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","initialState","navItem","navReducer","state","action","type","payLoad","viewMap","routesStopsList","route","mapBounds","routesSelectList","mapReducer","routesList","viewCreateForm","stopsList","viewEditForm","sendRequest","deleteRoute","routeReducer","rootReducer","combineReducers","navSelection","mapSelection","store","createStore","LeftNav","props","activeNav","useSelector","dispatch","useDispatch","navClickHandler","event","target","innerHTML","className","styles","navmenuwrapper","active","onClick","RouteItem","routeItemStyles","itemWrapper","nameText","name","itemActions","btn","stopList","forEach","stop","push","location","routeStopsList","id","Modal","modalStyles","modalWrapper","modalBody","closeBtn","onClose","children","CreateRoute","useState","routeName","setRouteName","direction","setDirection","stops","setStops","isNameValid","setIsNameValid","isDirectionValid","setIsDirectionValid","isStopValid","setIsStopValid","closeAddRouteModal","isEditRoute","addRoute","reqBody","a","url","guid","fetch","method","body","JSON","stringify","then","data","json","res","directionOptions","value","label","useEffect","filter","item","stopName","headerText","onSubmit","preventDefault","trim","Object","keys","length","element","routeBody","Date","getTime","status","control","error","errorClear","htmlFor","onChange","options","isMulti","saveBtn","GoogleApiWrapper","apiKey","bounds","setBounds","strokeColors","google","zoom","style","width","height","position","initialCenter","routeList","onReady","mapbounds","maps","LatLngBounds","loc","extend","LatLng","lat","lng","map","index","path","strokeColor","strokeOpacity","strokeWeight","title","MapModal","selectedRoutes","setSelectedRoutes","routeOptionsList","currentRoute","option","mapStyles","mapModalWrapper","mapModalBody","mapCloseBtn","actionsWrapper","routeStops","routeItem","mapWrapper","ConfirmModal","closeDeleteRouteModal","confirmBody","warningText","descText","confirmBtn","ExportFile","fileStyles","exportBtn","wb","Sheets","XLSX","json_to_sheet","fileData","SheetNames","excelBuffer","bookType","Blob","FileSaver","fileName","RouteView","isMapView","routesObj","fetchRoutes","isDelteRoute","fetchRoutesList","useCallback","response","entries","console","log","fetchStopsList","sl","routeStyles","routeViewWrapper","routesWrapper","descriptionText","displayFlex","createBtn","stopWrapper","stopId","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.67661080.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapModalWrapper\":\"RouteMap_mapModalWrapper__3TLAZ\",\"mapModalBody\":\"RouteMap_mapModalBody__1G8fb\",\"mapWrapper\":\"RouteMap_mapWrapper__lVdxo\",\"mapCloseBtn\":\"RouteMap_mapCloseBtn__16ELu\",\"actionsWrapper\":\"RouteMap_actionsWrapper__36EFL\",\"addRouteToMapBtn\":\"RouteMap_addRouteToMapBtn__1WOWt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navmenuwrapper\":\"LeftNav_navmenuwrapper__1wel_\",\"active\":\"LeftNav_active__1cYt1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exportBtn\":\"ExportFile_exportBtn__9zdZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemWrapper\":\"RouteItem_itemWrapper__34iq8\",\"nameText\":\"RouteItem_nameText__3qUjq\",\"btn\":\"RouteItem_btn__1puGH\",\"control\":\"RouteItem_control__2G0no\",\"headerText\":\"RouteItem_headerText__1vj7Y\",\"saveBtn\":\"RouteItem_saveBtn__hiacK\",\"error\":\"RouteItem_error__2y7DD\",\"errorClear\":\"RouteItem_errorClear__Y626M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"routeViewWrapper\":\"RouteView_routeViewWrapper__3EtoV\",\"headerText\":\"RouteView_headerText__2p60d\",\"descriptionText\":\"RouteView_descriptionText__FW58U\",\"createBtn\":\"RouteView_createBtn__CcJB0\",\"routesWrapper\":\"RouteView_routesWrapper__EQD4Y\",\"stopWrapper\":\"RouteView_stopWrapper__IL2M9\",\"displayFlex\":\"RouteView_displayFlex__2sNfM\"};","const initialState = {\r\n  navItem: \"Routes\"\r\n};\r\nconst navReducer = (state = initialState, action) => {\r\n  if (action.type === \"updateNav\") {\r\n    return { ...state, navItem: action.payLoad };\r\n  }\r\n  return state;\r\n};\r\nexport default navReducer;\r\n","const initialState = {\r\n  viewMap: false,\r\n  routesStopsList: [],\r\n  route: {},\r\n  mapBounds: null,\r\n  routesSelectList: []\r\n};\r\nconst mapReducer = (state = initialState, action) => {\r\n  if (action.type === \"viewMap\") {\r\n    return {\r\n      ...state,\r\n      viewMap: true,\r\n      ...action.payLoad\r\n    };\r\n  }\r\n  if (action.type === \"closeMap\") {\r\n    return {\r\n      ...state,\r\n      viewMap: false,\r\n      route: {},\r\n      routesStopsList: []\r\n    };\r\n  }\r\n  if (action.type === \"setSelectRoutes\") {\r\n    return { ...state, routesSelectList: action.payLoad };\r\n  }\r\n  if (action.type === \"addRouteToMap\") {\r\n    return { ...state, routesStopsList: action.payLoad };\r\n  }\r\n  if (action.type === \"loadMap\") {\r\n    return { ...state };\r\n  }\r\n  return state;\r\n};\r\nexport default mapReducer;\r\n","const initialState = {\r\n  routesList: [],\r\n  viewCreateForm: false,\r\n  stopsList: [],\r\n  viewEditForm: false,\r\n  route: {},\r\n  sendRequest: true,\r\n  deleteRoute: false\r\n};\r\nconst routeReducer = (state = initialState, action) => {\r\n  if (action.type === \"setRoutes\") {\r\n    return { ...state, routesList: action.payLoad };\r\n  }\r\n  if (action.type === \"setStops\") {\r\n    return { ...state, stopsList: action.payLoad };\r\n  }\r\n  if (action.type === \"createRoute\") {\r\n    return { ...state, viewCreateForm: true };\r\n  }\r\n  if (action.type === \"deleteRoute\") {\r\n    return { ...state, deleteRoute: true, route: action.payLoad };\r\n  }\r\n  if (action.type === \"fetchRoutes\") {\r\n    return { ...state, sendRequest: !state.sendRequest };\r\n  }\r\n  if (action.type === \"editRoute\") {\r\n    return { ...state, viewEditForm: true, route: action.payLoad };\r\n  }\r\n  if (action.type === \"closeEditRoute\") {\r\n    return { ...state, viewEditForm: false };\r\n  }\r\n  if (action.type === \"closeCreateRoute\") {\r\n    return { ...state, viewCreateForm: false };\r\n  }\r\n  if (action.type === \"closeDeleteRoute\") {\r\n    return { ...state, deleteRoute: false };\r\n  }\r\n  return state;\r\n};\r\nexport default routeReducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport navReducer from \"./navReducer\";\r\nimport mapReducer from \"./mapReducer\";\r\nimport routeReducer from \"./routeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  navSelection: navReducer,\r\n  mapSelection: mapReducer,\r\n  route: routeReducer\r\n});\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styles from \"./LeftNav.module.css\";\r\n\r\nconst LeftNav = (props) => {\r\n  const activeNav = useSelector((state) => state.navSelection.navItem);\r\n  const dispatch = useDispatch();\r\n\r\n  const navClickHandler = (event) => {\r\n    dispatch({ type: \"updateNav\", payLoad: event.target.innerHTML });\r\n  };\r\n  return (\r\n    <div className={styles.navmenuwrapper}>\r\n      <div\r\n        className={`${activeNav === \"Routes\" && styles.active}`}\r\n        onClick={navClickHandler}\r\n      >\r\n        Routes\r\n      </div>\r\n      <div\r\n        className={`${activeNav === \"Stops\" && styles.active}`}\r\n        onClick={navClickHandler}\r\n      >\r\n        Stops\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftNav;\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport routeItemStyles from \"./RouteItem.module.css\";\r\n\r\nconst RouteItem = (props) => {\r\n  const dispatch = useDispatch();\r\n  const viewCurrentRoute = () => {\r\n    const stopList = [];\r\n    props.route.stopsList.forEach((stop) => {\r\n      stopList.push(stop.location);\r\n    });\r\n    const routeStopsList = [\r\n      {\r\n        id: props.route.id,\r\n        name: props.route.name,\r\n        stopsList: stopList\r\n      }\r\n    ];\r\n    dispatch({\r\n      type: \"viewMap\",\r\n      payLoad: { route: props.route, routesStopsList: routeStopsList }\r\n    });\r\n  };\r\n  const editCurrentRoute = () => {\r\n    dispatch({ type: \"editRoute\", payLoad: props.route });\r\n  };\r\n  const deleteCurrentRoute = () => {\r\n    dispatch({ type: \"deleteRoute\", payLoad: props.route });\r\n  };\r\n  return (\r\n    <div className={routeItemStyles.itemWrapper}>\r\n      <div className={routeItemStyles.nameText}>{props.route.name}</div>\r\n      <div className={routeItemStyles.itemActions}>\r\n        <button className={routeItemStyles.btn} onClick={viewCurrentRoute}>\r\n          <i className=\"fa fa-binoculars\"></i>\r\n        </button>\r\n        <button className={routeItemStyles.btn} onClick={editCurrentRoute}>\r\n          <i className=\"fa fa-pencil\"></i>\r\n        </button>\r\n        <button className={routeItemStyles.btn} onClick={deleteCurrentRoute}>\r\n          <i className=\"fa fa-trash\"></i>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteItem;\r\n","import modalStyles from \"./Modal.module.css\";\r\nconst Modal = (props) => {\r\n  const closeButtonClicked = () => {\r\n    props.onClose();\r\n  };\r\n  return (\r\n    <div className={modalStyles.modalWrapper}>\r\n      <div className={modalStyles.modalBody}>\r\n        <button className={modalStyles.closeBtn} onClick={closeButtonClicked}>\r\n          <i className=\"fa fa-close\" />\r\n        </button>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nimport Modal from \"../Modal/Modal\";\r\nimport routeItemStyles from \"./RouteItem.module.css\";\r\n\r\nconst CreateRoute = (props) => {\r\n  const dispatch = useDispatch();\r\n  const stopsList = useSelector((state) => state.route.stopsList);\r\n  const route = useSelector((state) => state.route.route);\r\n  const [routeName, setRouteName] = useState(\"\");\r\n  const [direction, setDirection] = useState(\"\");\r\n  const [stops, setStops] = useState(\"\");\r\n  const [isNameValid, setIsNameValid] = useState(true);\r\n  const [isDirectionValid, setIsDirectionValid] = useState(true);\r\n  const [isStopValid, setIsStopValid] = useState(true);\r\n\r\n  const closeAddRouteModal = () => {\r\n    !props.isEditRoute && dispatch({ type: \"closeCreateRoute\" });\r\n    props.isEditRoute && dispatch({ type: \"closeEditRoute\" });\r\n  };\r\n\r\n  const nameHandler = (event) => {\r\n    setRouteName(event.target.value);\r\n  };\r\n  const directionHandler = (event) => {\r\n    setDirection(event);\r\n  };\r\n  const stopsHandler = (event) => {\r\n    setStops(event);\r\n  };\r\n\r\n  const addRoute = async (reqBody) => {\r\n    let url = \"https://chalodemo-default-rtdb.firebaseio.com/route.json\";\r\n    if (props.isEditRoute) {\r\n      url =\r\n        \"https://chalodemo-default-rtdb.firebaseio.com/route/\" +\r\n        route.guid +\r\n        \".json\";\r\n    }\r\n    fetch(url, {\r\n      method: props.isEditRoute ? \"PUT\" : \"POST\",\r\n      body: JSON.stringify(reqBody)\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        dispatch({ type: \"fetchRoutes\" });\r\n        closeAddRouteModal();\r\n      });\r\n  };\r\n\r\n  const submitRoute = (event) => {\r\n    event.preventDefault();\r\n    if (routeName.trim() === \"\") {\r\n      setIsNameValid(false);\r\n      return;\r\n    }\r\n    setIsNameValid(true);\r\n    if (!Object.keys(direction).length) {\r\n      setIsDirectionValid(false);\r\n      return;\r\n    }\r\n    setIsDirectionValid(true);\r\n    if (!stops.length) {\r\n      setIsStopValid(false);\r\n      return;\r\n    }\r\n    setIsStopValid(true);\r\n    const stopList = [];\r\n    stops.forEach((element) => {\r\n      stopList.push(element.value);\r\n    });\r\n    const routeBody = {\r\n      id: props.isEditRoute ? route.id : new Date().getTime(),\r\n      name: routeName,\r\n      direction: direction.value,\r\n      status: \"active\",\r\n      stopsList: stopList\r\n    };\r\n    addRoute(routeBody);\r\n  };\r\n\r\n  const directionOptions = [\r\n    { value: \"up\", label: \"Up\" },\r\n    { value: \"down\", label: \"Down\" }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (props.isEditRoute) {\r\n      setRouteName(route.name);\r\n      setDirection(\r\n        directionOptions.filter((item) => item.value === route.direction)[0]\r\n      );\r\n      const stopList = [];\r\n      route.stopsList.forEach((stop) => {\r\n        stopList.push({ label: stop.stopName, value: stop });\r\n      });\r\n      setStops(stopList);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Modal onClose={closeAddRouteModal}>\r\n      <div className={routeItemStyles.headerText}>\r\n        {props.isEditRoute ? \"Edit Route\" : \"Create New Route\"}\r\n      </div>\r\n      <form onSubmit={submitRoute}>\r\n        <div className={routeItemStyles.control}>\r\n          <label\r\n            className={`${!isNameValid && routeItemStyles.error} ${\r\n              isNameValid && routeItemStyles.errorClear\r\n            }`}\r\n            htmlFor=\"name\"\r\n          >\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            onChange={nameHandler}\r\n            value={routeName}\r\n          />\r\n        </div>\r\n        <div className={routeItemStyles.control}>\r\n          <label\r\n            className={`${!isDirectionValid && routeItemStyles.error} ${\r\n              isDirectionValid && routeItemStyles.errorClear\r\n            }`}\r\n            htmlFor=\"direction\"\r\n          >\r\n            Direction\r\n          </label>\r\n          <Select\r\n            options={directionOptions}\r\n            onChange={directionHandler}\r\n            value={direction}\r\n          ></Select>\r\n        </div>\r\n        <div className={routeItemStyles.control}>\r\n          <label\r\n            className={`${!isStopValid && routeItemStyles.error} ${\r\n              isStopValid && routeItemStyles.errorClear\r\n            }`}\r\n            htmlFor=\"stops\"\r\n          >\r\n            Stops\r\n          </label>\r\n          <Select\r\n            options={stopsList}\r\n            isMulti={true}\r\n            onChange={stopsHandler}\r\n            value={stops}\r\n          ></Select>\r\n        </div>\r\n        <button className={routeItemStyles.saveBtn}>\r\n          {props.isEditRoute ? \"Save Route\" : \"Add Route\"}\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateRoute;\r\n","import { Polyline, Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\r\nimport { useState } from \"react\";\r\n\r\nconst RouteMap = (props) => {\r\n  const [bounds, setBounds] = useState(null);\r\n  const onMapLoad = () => {\r\n    var mapbounds = new props.google.maps.LatLngBounds();\r\n    props.routeList.forEach((route) => {\r\n      route.stopsList.forEach((loc) => {\r\n        mapbounds.extend(new props.google.maps.LatLng(loc.lat, loc.lng));\r\n      });\r\n    });\r\n    setBounds(mapbounds);\r\n  };\r\n  const strokeColors = [\"red\", \"blue\", \"green\", \"black\", \"pink\"];\r\n  return (\r\n    <div>\r\n      <Map\r\n        google={props.google}\r\n        zoom={8}\r\n        style={{ width: \"500px\", height: \"400px\", position: \"relative\" }}\r\n        initialCenter={props.routeList[0].stopsList[0]}\r\n        onReady={onMapLoad}\r\n        bounds={bounds}\r\n      >\r\n        {props.routeList.map((route, index) => (\r\n          <Polyline\r\n            key={route.id}\r\n            path={route.stopsList}\r\n            strokeColor={strokeColors[index % 5]}\r\n            strokeOpacity={1}\r\n            strokeWeight={6}\r\n          />\r\n        ))}\r\n        {props.routeList.map((route, index) =>\r\n          route.stopsList.map((loc, position) => (\r\n            <Marker\r\n              key={`marker-${index}-${position}`}\r\n              position={loc}\r\n              title={route.name}\r\n            ></Marker>\r\n          ))\r\n        )}\r\n      </Map>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: \"AIzaSyALUiHW1mdHAUD_MeAAwDNRMSXwZgAx5YE\"\r\n})(RouteMap);\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\n\r\nimport RouteMap from \"../RouteMap/RouteMap\";\r\nimport mapStyles from \"./RouteMap.module.css\";\r\n\r\nconst MapModal = () => {\r\n  const [selectedRoutes, setSelectedRoutes] = useState([]);\r\n  const routeStopsList = useSelector(\r\n    (state) => state.mapSelection.routesStopsList\r\n  );\r\n  const routeOptionsList = useSelector(\r\n    (state) => state.mapSelection.routesSelectList\r\n  );\r\n  const currentRoute = useSelector((state) => state.mapSelection.route);\r\n  const dispatch = useDispatch();\r\n  const closeCurrentRoute = () => {\r\n    dispatch({ type: \"closeMap\", payLoad: false });\r\n  };\r\n  const addRouteToMaps = (event) => {\r\n    const routeStops = [];\r\n    let stopList = [];\r\n    event.forEach((routeItem) => {\r\n      stopList = [];\r\n      routeItem.value.stopsList.forEach((stop) => {\r\n        stopList.push(stop.location);\r\n      });\r\n      routeStops.push({\r\n        id: routeItem.value.id,\r\n        name: routeItem.value.name,\r\n        stopsList: stopList\r\n      });\r\n    });\r\n    routeStops.length &&\r\n      dispatch({\r\n        type: \"addRouteToMap\",\r\n        payLoad: routeStops\r\n      });\r\n    setSelectedRoutes(event);\r\n  };\r\n  useEffect(() => {\r\n    setSelectedRoutes(\r\n      routeOptionsList.filter((option) => option.value.id === currentRoute.id)\r\n    );\r\n  }, []);\r\n  return (\r\n    <div className={mapStyles.mapModalWrapper}>\r\n      <div className={mapStyles.mapModalBody}>\r\n        <button className={mapStyles.mapCloseBtn} onClick={closeCurrentRoute}>\r\n          <i className=\"fa fa-close\" />\r\n        </button>\r\n        <div className={mapStyles.actionsWrapper}>\r\n          <label htmlFor=\"name\">Add routes to map</label>\r\n          <Select\r\n            options={routeOptionsList}\r\n            isMulti={true}\r\n            onChange={addRouteToMaps}\r\n            value={selectedRoutes}\r\n          ></Select>\r\n        </div>\r\n        <div className={mapStyles.mapWrapper}>\r\n          <RouteMap routeList={routeStopsList}></RouteMap>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapModal;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport modalStyles from \"./Modal.module.css\";\r\n\r\nconst ConfirmModal = (props) => {\r\n  const dispatch = useDispatch();\r\n  const route = useSelector((state) => state.route.route);\r\n  const closeDeleteRouteModal = () => {\r\n    dispatch({ type: \"closeDeleteRoute\" });\r\n  };\r\n  const confirmButtonClicked = () => {\r\n    const url =\r\n      \"https://chalodemo-default-rtdb.firebaseio.com/route/\" +\r\n      route.guid +\r\n      \".json\";\r\n    fetch(url, {\r\n      method: \"DELETE\"\r\n    })\r\n      .then((data) => data.json())\r\n      .then((res) => {\r\n        dispatch({ type: \"fetchRoutes\" });\r\n        closeDeleteRouteModal();\r\n      });\r\n  };\r\n  return (\r\n    <Modal onClose={closeDeleteRouteModal}>\r\n      <div className={modalStyles.confirmBody}>\r\n        <p className={modalStyles.warningText}>\r\n          Procced to Delete {route.name}\r\n        </p>\r\n        <p className={modalStyles.descText}>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n        </p>\r\n        <button\r\n          className={modalStyles.confirmBtn}\r\n          onClick={confirmButtonClicked}\r\n        >\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ConfirmModal;\r\n","import * as FileSaver from \"file-saver\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nimport fileStyles from \"./ExportFile.module.css\";\r\n\r\nconst ExportFile = (props) => {\r\n  const exportToCSV = () => {\r\n    debugger;\r\n    const fileType =\r\n      \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\r\n    const fileExtension = \".xlsx\";\r\n    const ws = XLSX.utils.json_to_sheet(props.fileData);\r\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\r\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\r\n    const data = new Blob([excelBuffer], { type: fileType });\r\n    FileSaver.saveAs(data, props.fileName + fileExtension);\r\n  };\r\n  return (\r\n    <div>\r\n      <button className={fileStyles.exportBtn} onClick={exportToCSV}>\r\n        Export Data\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportFile;\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport LeftNav from \"../LeftNav/LeftNav\";\r\nimport RouteItem from \"../RouteItem/RouteItem\";\r\nimport CreateRoute from \"../RouteItem/CreateRoute\";\r\nimport MapModal from \"../RouteMap/MapModal\";\r\nimport ConfirmModal from \"../Modal/ConfirmModal\";\r\nimport routeStyles from \"./RouteView.module.css\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport ExportFile from \"../File/ExportFile\";\r\n\r\nconst RouteView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const activeNav = useSelector((state) => state.navSelection.navItem);\r\n  const isMapView = useSelector((state) => state.mapSelection.viewMap);\r\n  const routesObj = useSelector((state) => state.route.routesList);\r\n  const viewCreateForm = useSelector((state) => state.route.viewCreateForm);\r\n  const viewEditForm = useSelector((state) => state.route.viewEditForm);\r\n  const fetchRoutes = useSelector((state) => state.route.sendRequest);\r\n  const isDelteRoute = useSelector((state) => state.route.deleteRoute);\r\n  const stopsList = useSelector((state) => state.route.stopsList);\r\n\r\n  const openAddRouteModal = () => {\r\n    dispatch({ type: \"createRoute\" });\r\n  };\r\n\r\n  const fetchRoutesList = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://chalodemo-default-rtdb.firebaseio.com/route.json\"\r\n      );\r\n      const data = await response.json();\r\n      const routesList = [];\r\n      const routesSelectList = [];\r\n      Object.entries(data).forEach((route) => {\r\n        routesList.push({ ...route[1], guid: route[0] });\r\n        routesSelectList.push({\r\n          label: route[1].name,\r\n          value: { ...route[1], guid: route[0] }\r\n        });\r\n      });\r\n      dispatch({ type: \"setRoutes\", payLoad: routesList });\r\n      dispatch({ type: \"setSelectRoutes\", payLoad: routesSelectList });\r\n      dispatch({ type: \"fetchRoutes\" });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchRoutes && fetchRoutesList();\r\n  }, [fetchRoutes]);\r\n\r\n  const fetchStopsList = useCallback(async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://chalodemo-default-rtdb.firebaseio.com/stops.json\"\r\n      );\r\n      const stopsList = await response.json();\r\n      const sl = [];\r\n      Object.entries(stopsList).forEach((stop) => {\r\n        sl.push({ label: stop[1].stopName, value: stop[1] });\r\n      });\r\n      dispatch({ type: \"setStops\", payLoad: sl });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchStopsList();\r\n  }, [fetchStopsList]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={routeStyles.routeViewWrapper}>\r\n        <LeftNav></LeftNav>\r\n        {activeNav === \"Routes\" && (\r\n          <div className={routeStyles.routesWrapper}>\r\n            <div className={routeStyles.headerText}>{activeNav}</div>\r\n            <p className={routeStyles.descriptionText}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam.\r\n            </p>\r\n            <div className={routeStyles.displayFlex}>\r\n              <button\r\n                className={routeStyles.createBtn}\r\n                onClick={openAddRouteModal}\r\n              >\r\n                Create New Route\r\n              </button>\r\n              <ExportFile fileName=\"routes\" fileData={routesObj} />\r\n            </div>\r\n            <div>\r\n              {routesObj.map((route, index) => (\r\n                <RouteItem route={route} key={route.id}></RouteItem>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {activeNav === \"Stops\" && (\r\n          <div>\r\n            <div className={routeStyles.headerText}>{activeNav}</div>\r\n            <p className={routeStyles.descriptionText}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\r\n              enim ad minim veniam.\r\n            </p>\r\n            <div className={routeStyles.displayFlex}>\r\n              <p>All Stops</p>\r\n              <ExportFile fileName=\"stops\" fileData={stopsList} />\r\n            </div>\r\n            {stopsList.map((stop, index) => (\r\n              <div className={routeStyles.stopWrapper} key={stop.value.stopId}>\r\n                {stop.label}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n      {isMapView && <MapModal></MapModal>}\r\n      {isDelteRoute && <ConfirmModal></ConfirmModal>}\r\n      {viewCreateForm && <CreateRoute isEditRoute={false}></CreateRoute>}\r\n      {viewEditForm && <CreateRoute isEditRoute={viewEditForm}></CreateRoute>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RouteView;\r\n","import \"./styles.css\";\nimport RouteView from \"./components/RouteView/RouteView\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <RouteView></RouteView>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closeBtn\":\"Modal_closeBtn__1xWZV\",\"confirmBtn\":\"Modal_confirmBtn__2o5cB\",\"modalWrapper\":\"Modal_modalWrapper__VFEZN\",\"modalBody\":\"Modal_modalBody__1CdAm\",\"confirmBody\":\"Modal_confirmBody__1_iXQ\",\"warningText\":\"Modal_warningText__f7oD-\"};"],"sourceRoot":""}